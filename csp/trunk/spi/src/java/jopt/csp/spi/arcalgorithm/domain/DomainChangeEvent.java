package jopt.csp.spi.arcalgorithm.domain;





/**
 * Event generated by domains when internal structure changes occur
 *
 * 
 */
public class DomainChangeEvent {
    
    private Domain domain;
    // Type of domain change: enumeration contained in DomainChangeType
    private int type;
    private Number minChange;
    private Number maxChange;
    private int numberType;
    
    /**
     * Constructor
     */
    public DomainChangeEvent(Domain domain) {
        this.domain = domain;
    }
    
    /**
     * Returns the domain that generated the event
     */
    public Domain getDomain() {
        return this.domain;
    }
    
    /**
     * Sets the type of event that was generated
     */
    public void setType(int type) {
        this.type = type;
    }

    /**
     * Returns the type of event that was generated
     */
    public int getType() {
        return this.type;
    }
    
    /**
     * Sets the min and max change amount for event
     */
    public void setNumberChange(Number min, Number max, int numberType) {
        this.minChange = min;
        this.maxChange = max;
        this.numberType = numberType;
    }
    
    /**
     * Returns number type for min and max change values
     */
    public int getNumberType() {
    	return numberType;
    }
    
    /**
     * Returns the amount by which the new min differs from the previous min
     */
    public Number getMinChange() {
        return this.minChange;
    }
    
    /**
     * Returns the amount by which the new max differs from the previous max
     */
    public Number getMaxChange() {
        return this.maxChange;
    }
}