package jopt.csp.spi.arcalgorithm.graph.node;




/**
 * Event generated by nodes when domain changes occur
 */
public class NodeChangeEvent {

    private Node node;
    // Type of domain change: enumeration contained in DomainChangeType
    private int type;
    private Object callbackVal;
    private Number minChange;
    private Number maxChange;
    private int numberType;

    /**
     * Constructor
     */
    public NodeChangeEvent(Node node) {
        this.node = node;
    }

    /**
     * Returns domain that generated event
     */
    public Node getNode() {
        return this.node;
    }

    /**
     * Sets type of event that was generated
     */
    public void setType(int type) {
        this.type = type;
    }

    /**
     * Returns type of event that was generated
     */
    public int getType() {
        return this.type;
    }

    /**
     * @return Returns the callback value for the listener
     */
    public Object getCallbackValue() {
        return callbackVal;
    }

    /**
     * @param callbackVal Sets the callback value for the listener
     */
    public void setCallbackValue(Object callbackVal) {
        this.callbackVal = callbackVal;
    }

    /**
     * Sets the amount the min and max have changed in this event
     */
    public void setNumberChange(Number minChange, Number maxChange, int numberType) {
        this.minChange = minChange;
        this.maxChange = maxChange;
        this.numberType = numberType;
    }

    /**
     * Returns number type for min and max change values
     */
    public int getNumberType() {
        return numberType;
    }

    /**
     * Returns the amount by which the new min differs from the previous min
     */
    public Number getMinChange() {
        return this.minChange;
    }

    /**
     * Returns the amount by which the new max differs from the previous max
     */
    public Number getMaxChange() {
        return this.maxChange;
    }

    public String toString() {
        return node.toString();
    }
}